<div style="text-align: left;">

Imagine a complex project with a complex architecture. Imagine having to rebuild one of this projects's features because it has multiples integrations that your project doesn't need or because you see a potential security flaw being developed with this new integration.
<br>
Imagine having to deal with the complexity of another integrations because there's no Api Governance and standards to be followed.

<br>
<br>

Api Gateways have a very important role in projects specially when it comes to big companies. Big companies have lots of internal automation and partnership with another
companies. It's important to keep track of what's available to use between the teams inside and outside the company and build architectures for security and performance monitoring. 
<br>

Gateways can be present at any of the seven layers of the <a href="https://en.wikipedia.org/wiki/OSI_model" target="blank">OSI Model</a>.
<br>
Api Gateways operates on the Application Layer (Layer 7) where the Http/Https communication happens right in the middle of the client and server communication.
<img class="post-img" src="images/api-gateway/1.PNG">

<br>
<br>

With an Api Gateway every request to the servers can be controlled. That's an exemple of a backend with an distributed architecture:
<img class="post-img" src="images/api-gateway/2.PNG">

<br>
<br>

Example of different projects with different databases:
<img class="post-img" src="images/api-gateway/3.PNG">

<br>
<br>

<h3>Conclusion</h3>

An Api Gateway is an application that intermediates Client/Servers communication. It acts as an bridge between networks or applications inside the same network.
<br>
The Api Gateway sees every request, that makes easier for monitoring, promote best practices and prevent code duplication because all APIs can be found in one place, the Api Gateway.
</div>
