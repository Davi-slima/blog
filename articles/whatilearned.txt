Some days ago I was feeling stagnated so I decided to review my goals and actually se what I've accomplhised in the past years.
I've been studying Software Engineering for almost 5 years now since I got into a <a href="https://pt.wikipedia.org/wiki/Ensino_t%C3%A9cnico" target="_blank" technical school</a> in SP.
And many things I wouldn't do or would do in a different way.
<br>
5 years studying and 2 years working, and the remaining 3 years?
<br>
<br>
Seeing the big picture and taking notes of everything I've accomplhised resulted in this post...
<br>
What I would do and what I wouldn't do if I could travel to the past and talk to myself?!!
<br>
<br>
<h3>Make your own path</h3>
I spent 2,5 years thinking that to have "good job" I would need a college degree and <b>that was a big mistake</b>.
Thinking that the only way to have a "good job" is going to a college and getting good grades is very simple and not so smart.
If you have 40k and a lot of time to spend in a college degree, great, go for it but not everyone have the money/time to do so.
<br>
<br>
Thinking in that way I was limiting and lying to myself. Almost anything can be learned for free on the internet, so why wait till college?
Start today and see what happens!
<br>
<br>
<h3>Be project oriented</h3>
I got into college (yes, I got into college) I learned to go into all topics of a 600 pages book to learn something
and at the end of the day didn't learned anything.
<br>
Let's bring some reallity here. You need previous knowledge to do a job? Yes, a little bit, but you need to know the entire Java 8 reference guide?
Don't think so...
<br>
Before I get my first job as a Software Engineer I was studying HTML, CSS, JavaScript and Python. I did some C# and PHP stuff too and guess what?
The language used in the job was Java :).
<br>
And even though the language was Java, they didn't ask me if I've read Java reference guide, the ask me if I could do the job!
<br>
The rule is, get the project, break into little pieces, learn the topics individually and finally apply to the project. Can take some time to learn, and implement and
you can think that your're doing the job twice, but the second, third implementation of a topic will makes sense at the end.
<br>
You will realize that you actually learned something and can focus on the week points of your knowledge.
<br>
<br>
<h3>Plans are nothing, replanning is everything</h3>
I spent 1,5 years in a technical school, the main language was C#, I had a <a href="images/latitude.jpg">horible laptop</a> and no money, so I to improvise...
I tried some Linux distros:
<ul>
    <li><a href="https://linuxmint.com/">Linux Mint</a></li>
    <li><a href="https://lubuntu.net/">Lubuntu</a></li>
    <li><a href="https://www.archlinux.org/">Arch Linux</a></li>
    <li><a href="https://www.kali.org/">Kali Linux</a></li>
    <li><a href="https://ubuntu.com/">Ubuntu</a></li>
</ul>
And started to study .NET Core...
<br>
If you have a goal to learn to code I wouldn't recommend that.
<br>
I lost so many time looking and trying different Linux distribution for nothing, I had to do my final project in C# and of course I 
acquired some Linux knowledge that helped me but what I think I could change was my approach to make money:
I would:<ul>
    <li>Look for necessary knowledge to do the job on job posts, duh</li>
    <li>I would focus in one language</li>
    <li>I wouldn't spend my energy in something so hard in the beginning. C# had so many things to install and check on</li>
</ul>
<br>
<br>
<b>My recommendation</b>, start with JavaScript doing some front-end stuff and build a portfolio then move on to the back-end
to add some business logic to your projects, the language could be Java or Python.
<br>
<br>
- Focus
- Don't compare yourself to others
- Learn to communicate